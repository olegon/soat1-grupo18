openapi: 3.0.3
info:
  title: Swagger Tech Challenge - OpenAPI 3.0
  description: |-
    APIs do projeto Tech Challenge.
    
    Criado com [Swagger Editor](https://editor.swagger.io/).
  version: 0.0.1
tags:
  - name: Clientes
    description: Tudo sobre o cliente
  - name: Produtos
    description: Tudo sobre produtos
  - name: Pedidos
    description: Tudo sobre pedidos
paths:
  /clientes:
    post:
      tags:
        - Clientes
      summary: Permite que um cliente se cadastre
      description: Permite que um cliente se cadastre
      requestBody:
        description: Permite que um cliente se cadastre
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '201':
          description: Sucesso
  /produtos:
    summary: Gestão de produtos
    description: Gestão de produtos
    get:
      tags:
        - Produtos
      summary: Obter produtos por categoria
      description: Obter produtos por categoria
      parameters:
        - name: categoria
          in: query
          description: Filtro de categoria
          required: true
          schema:
            $ref: '#/components/schemas/Categoria'
      operationId: obter-produtos
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produto'
    post:
      tags:
        - Produtos
      summary: Cadastrar um produto
      description: Cadastrar um produto
      requestBody:
        description: Produto em si
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoRequest'
      operationId: cadastrar-produto
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
  /produtos/{produtoId}:
    put:
      tags:
        - Produtos
      summary: Editar um produto
      description: Editar um produto
      parameters:
        - name: produtoId
          in: path
          description: ID do produto
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Produto em si
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoRequest'
      operationId: editar-produto
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
    delete:
      tags:
        - Produtos
      summary: Remover um produto
      description: Remover um produto
      parameters:
        - name: produtoId
          in: path
          description: ID do produto
          required: true
          schema:
            type: integer
            format: int64
      operationId: remover-produto
      responses:
        '200':
          description: Sucesso
  /pedidos:
    summary: Gestão de pedidos
    description: Gestão de pedidos
    post:
      tags:
        - Pedidos
      summary: Fazer pedido
      operationId: fazer-pedido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoRequest'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoResponse'
    get:
      tags:
        - Pedidos
      summary: Obter pedidos por status
      parameters:
        - name: status
          in: query
          description: Filtro de status
          required: true
          schema:
            $ref: '#/components/schemas/StatusDoPedido'
      operationId: obter-pedidos
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoResponse'
components:
  schemas:
    Categoria:
      type: string
      default: Acompanhamento
      enum:
        - Lanche
        - Acompanhamento
        - Bebida
        - Sobremesa
    Cliente:
      required:
        - cpf
      properties:
        cpf:
          type: string
          example: 11122233344
    PedidoRequest:
      required:
        - items
      properties:
        cpf:
          type: string
          example: 11122233344
        items:
          type: array
          items:
            $ref: '#/components/schemas/PedidoRequestItem'
    PedidoRequestItem:
      required:
        - produtoId
        - quantidade
      properties:
        produtoId:
          type: integer
          format: int64
          example: 42
        quantidade:
          type: integer
          format: int32
          example: 2
    PedidoResponse:
      required:
        - id
        - items
      properties:
        id:
          type: integer
          format: int64
        cpf:
          type: string
          example: 11122233344
        items:
          type: array
          items:
            $ref: '#/components/schemas/PedidoResponseItem'
    PedidoResponseItem:
      required:
        - produto
        - quantidade
      properties:
        produto:
          $ref: '#/components/schemas/Produto'
        quantidade:
          type: integer
          format: int32
          example: 2
    ProdutoRequest:
      required:
        - nome
        - descricao
        - preco
        - categoria
      properties:
        nome:
          type: string
          example: Batata frita
        descricao:
          type: string
          example: 150 gramas da batata mais crocante da cidade!
        preco:
          type: number
          format: float
          example: 5.99
        categoria:
          $ref: '#/components/schemas/Categoria'
    Produto:
      required:
        - id
        - nome
        - descricao
        - preco
        - categoria
      properties:
        id:
          type: integer
          format: int64
          example: 42
        nome:
          type: string
          example: Batata frita
        descricao:
          type: string
          example: 150 gramas da batata mais crocante da cidade!
        preco:
          type: number
          format: float
          example: 5.99
        categoria:
          $ref: '#/components/schemas/Categoria'
    StatusDoPedido:
      type: string
      default: Recebido
      enum:
        - Recebido
        - Em preparação
        - Pronto
        - Finalizado
